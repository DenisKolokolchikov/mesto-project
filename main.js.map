{"version":3,"file":"main.js","mappings":"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","sources":["webpack://practikum/./src/components/api.js","webpack://practikum/./src/components/modal.js","webpack://practikum/./src/components/utils.js","webpack://practikum/./src/components/card.js","webpack://practikum/./src/components/validate.js","webpack://practikum/./src/index.js"],"sourcesContent":["const config = {\r\n    baseUrl: \"https://nomoreparties.co/v1/plus-cohort-15\",\r\n    headers: {\r\n        \"Content-type\": 'application/json',\r\n        authorization: '2b8d2e32-f428-4578-8dc4-d80d04887d6e'\r\n    },\r\n}             \r\n\r\n//ce578aeb-a49b-4df4-9aa2-77f24f46d839 старый токен когорта-13\r\n\r\n//отдельная функция для ответа ОК или не ОК\r\nexport const onResponse = (res) => { \r\n    return res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\r\n}\r\n\r\n//отображаем карточки с сервера\r\nexport function getInitialCards() {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        headers: config.headers,\r\n    })\r\n    .then(onResponse)    \r\n}\r\n\r\nexport function getAllUnfo() {\r\n    return Promise.all([getInitialCards(), getInfoUser()])\r\n}\r\n\r\n//добавляем новую карточку\r\nexport function addNewCard(data) {\r\n    return fetch(`${config.baseUrl}/cards`, {\r\n        method: 'POST',\r\n        headers: config.headers,\r\n        body: JSON.stringify(data) \r\n    })\r\n    .then(onResponse)\r\n} \r\n\r\n//удаление карточки\r\nexport function removeCard(cardId) {\r\n    return fetch(`${config.baseUrl}/cards/${cardId}`, {\r\n        method: 'DELETE',\r\n        headers: config.headers\r\n    })\r\n    .then(onResponse)\r\n}\r\n\r\n//редактирование инфо профиля\r\nexport function editInfoUser(name, job) {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        method: 'PATCH',\r\n        headers: config.headers, \r\n        body: JSON.stringify({\r\n            name: name,\r\n            about: job\r\n        })\r\n    })\r\n    .then(onResponse)\r\n} \r\n\r\n//загрузка информации о пользователе\r\nexport function getInfoUser() {\r\n    return fetch(`${config.baseUrl}/users/me`, {\r\n        headers: config.headers\r\n    })\r\n    .then(onResponse)\r\n} \r\n\r\n//обновдение аватара\r\nexport function patchAvatar(avatar) {\r\n    return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: config.headers,\r\n      body: JSON.stringify({\r\n      avatar: avatar\r\n      })\r\n    })\r\n    .then(onResponse)\r\n  }\r\n\r\n//Добавляем и удаляем лайк\r\nexport function changeLikeStatus(cardId, isLike) {\r\n    return fetch(`${config.baseUrl}/cards/likes/${cardId}`, {\r\n        method: isLike ? \"DELETE\" : \"PUT\",\r\n        headers: config.headers\r\n    })\r\n    .then(onResponse)\r\n}","import { closePopup, openPopup, changeLoading } from \"./utils\";\r\nimport { editInfoUser } from \"./api\";\r\n\r\n\r\nexport const profileAvatar = document.querySelector('.profile__avatar');\r\nexport const popupAvatar = document.querySelector('.popup__avatar');\r\nexport const avatarInput = document.querySelector('.avatar__input');\r\nconst nameInput = document.querySelector('.name__input');\r\nconst jobInput = document.querySelector('.job__input');\r\nconst profileTitle = document.querySelector('.profile__title');\r\nconst profileSubtitle = document.querySelector('.profile__subtitle');\r\nexport const popupProfile = document.querySelector('.popup-profile');\r\nconst popupImage = document.querySelector('.popup__type-image');\r\nconst popupPic = popupImage.querySelector('.popup__big-image');\r\nconst popupBigTitle = document.querySelector('.popup__big-title');\r\nexport const profileAvatarOverlay = document.querySelector('.profile__avatar-overlay');\r\nconst saveButton = document.querySelector('.button__edit-save');\r\n\r\n//подключение кнопки открытия попап для добавления картинок\r\nexport function editPopupData() {\r\n    nameInput.value = profileTitle.textContent;\r\n    jobInput.value = profileSubtitle.textContent;\r\n}\r\n\r\n//редактирование имени и информации о себе\r\nexport function submitProfileForm(evt) {\r\n    evt.preventDefault();   \r\n    changeLoading(true, saveButton);\r\n    editInfoUser(nameInput.value, jobInput.value)\r\n    .then((res)=>{\r\n        profileTitle.textContent = res.name;\r\n        profileSubtitle.textContent = res.about;\r\n        closePopup(popupProfile);\r\n    })\r\n    .catch((err)=> console.log(err))\r\n    .finally(()=>changeLoading(false, saveButton));   \r\n}\r\n\r\n//открытие большой картинки\r\nexport const handleClickImage = function (data) {\r\n    popupPic.src = data.link;\r\n    popupPic.alt = data.name;\r\n    popupBigTitle.textContent = data.name;\r\n    openPopup(popupImage);\r\n}\r\n\r\n//открытие большой картинки\r\nexport const handleClickImageClose = function () {\r\n    closePopup(popupImage);\r\n}\r\n\r\n//закрытие попапов кнопкой esc\r\nexport function closeByEscape(evt) {\r\n    if (evt.key === 'Escape') {\r\n        const openedPopup = document.querySelector('.popup_opened');\r\n        closePopup(openedPopup);\r\n    } \r\n}\r\n\r\n//получение данных о пользователе\r\nexport const setUserInfo = ({userName, userDescription, userAvatar}) => {\r\n    if(userName) profileTitle.textContent = userName;\r\n    if(userDescription) profileSubtitle.textContent = userDescription;\r\n    if(userAvatar) profileAvatar.src = userAvatar;\r\n};\r\n\r\n","import { closeByEscape } from \"./modal\";\r\n\r\n//закрытие попап\r\nexport function closePopup(popup) {\r\n    popup.classList.remove('popup_opened');\r\n    document.removeEventListener('keydown', closeByEscape); \r\n}\r\n//открытие попап\r\nexport function openPopup(popup) {\r\n    popup.classList.add('popup_opened');\r\n    document.addEventListener('keydown', closeByEscape); \r\n}\r\n\r\n//Улучшение UX форм\r\nexport function changeLoading(isLoading, place) {   \r\n        if(isLoading) {\r\n            place.textContent = \"Сохранение...\";\r\n        } else {\r\n            place.textContent = \"Сохранить\";\r\n        }    \r\n}\r\n\r\n\r\n","import { handleClickImage } from \"./modal\";\r\nimport { removeCard, changeLikeStatus } from \"./api\";\r\n\r\nconst cardTemplate = document.querySelector('#card-template').content.querySelector('.elements__item');\r\nexport const cardsContainer = document.querySelector('.elements__list');\r\n\r\n//определяем все лайки\r\nconst isLiked = (likesArray, userId) => {\r\n    return Boolean(likesArray.find((likeObj) => {\r\n        return likeObj._id === userId\r\n    }))\r\n}\r\n\r\n//добваляем визуал лайка\r\nconst updateLikeButton = (cardElement, likesArray, userId) => {\r\n    const cardLike = cardElement.querySelector('.button__like');\r\n    const likeCounter = cardElement.querySelector('.photo__like-counter');\r\n    likeCounter.textContent = likesArray.length;\r\n    cardLike.classList.toggle('button__like-active', isLiked(likesArray, userId)); \r\n}\r\n\r\n\r\n\r\n //подключаем лайк\r\n const handleChangeLikesStatus = (cardElement, cardId, isLiked, userId) => {\r\n    changeLikeStatus(cardId, isLiked)\r\n        .then((dataFromServer) => {\r\n            updateLikeButton(cardElement, dataFromServer.likes, userId)\r\n        })   \r\n        .catch((err)=> console.log(err))  \r\n}\r\n\r\n//создаем функцию, которая добавляет карточку\r\nconst createCard = function (data, userId) {\r\n    const cardElement = cardTemplate.cloneNode(true);\r\n    const cardImage = cardElement.querySelector('.elements__img');\r\n    const cardName = cardElement.querySelector('.elements__title');\r\n    const cardDelete = cardElement.querySelector('.button__del');\r\n    const cardLike = cardElement.querySelector('.button__like');\r\n    \r\n    cardName.textContent = data.name;\r\n    cardImage.src = data.link;\r\n    cardImage.alt = data.name;\r\n   \r\n    updateLikeButton(cardElement, data.likes, userId)\r\n\r\n    if(data.owner._id !== userId) {\r\n        cardDelete.remove();\r\n    }\r\n\r\n    cardLike.addEventListener('click', ()=> \r\n        handleChangeLikesStatus(cardElement, data._id, cardLike.classList.contains('button__like-active'), userId)\r\n    );\r\n\r\n    cardDelete.addEventListener('click', (evt) => {             \r\n        removeCard(data._id)\r\n            .then(()=> {\r\n            evt.target.closest('.elements__item').remove();\r\n            })\r\n            .catch((err)=> console.log(err))\r\n        });\r\n\r\n    cardImage.addEventListener('click', () => handleClickImage(data));\r\n    return cardElement;\r\n}\r\n\r\n//рендерим карточки\r\nexport const renderCard = function (data, container, userId) {\r\n    const card = createCard(data, userId);\r\n    container.prepend(card);\r\n}\r\n","export const validationConfig = {\r\n    formSelector: '.form__popup',\r\n    inputSelector: '.popup__input',\r\n    submitButtonSelector: '.popup__button',\r\n    inactiveButtonClass: 'button__popup_invalid',\r\n    inputErrorClass: 'popup__input_state_invalid',\r\n  }\r\n\r\nconst showError = (errorElement, inputElement, config) => {\r\n    inputElement.classList.add(config.inputErrorClass);\r\n    errorElement.textContent = inputElement.validationMessage;\r\n}\r\n\r\nconst hideError = (errorElement, inputElement, config) => {\r\n    inputElement.classList.remove(config.inputErrorClass);\r\n    errorElement.textContent = inputElement.validationMessage;\r\n}\r\n\r\n//Проверяем на валидность\r\nconst checkInputValidity = (inputElement, formElement, config) => {\r\n    const isInputValid = inputElement.validity.valid; \r\n    const errorElement = formElement.querySelector(`#${inputElement.id}-error`);\r\n    if(!isInputValid) {\r\n        showError(errorElement, inputElement, config);\r\n    } else {\r\n        hideError(errorElement, inputElement, config);\r\n    }\r\n}\r\n\r\n//Вкл/Выкл кнопки сохранить\r\nexport const toggleButtonState = (button, isActive = false, config) => {\r\n        if(isActive) {\r\n            button.classList.remove(config.inactiveButtonClass);\r\n            button.disabled = false;\r\n        } else {\r\n            button.classList.add(config.inactiveButtonClass);\r\n            button.disabled = 'disabled';\r\n        }             \r\n}\r\n\r\n//Обработчики события\r\n   export const setEventListener = (formElement, config) => {\r\n    const inputList = formElement.querySelectorAll(config.inputSelector);\r\n    const submitButton = formElement.querySelector(config.submitButtonSelector);\r\n    toggleButtonState(submitButton, formElement.checkValidity(), config); \r\n\r\n    inputList.forEach(input => {\r\n        input.addEventListener('input', () => {\r\n            checkInputValidity(input, formElement, config)\r\n            toggleButtonState(submitButton, formElement.checkValidity(), config);           \r\n        });\r\n    });\r\n} \r\n\r\n","import './pages/index.css'; \r\nimport { closePopup, openPopup, changeLoading } from './components/utils';\r\nimport { editPopupData, popupAvatar, popupProfile, submitProfileForm, profileAvatarOverlay, setUserInfo, avatarInput } from './components/modal';\r\nimport { cardsContainer, renderCard } from './components/card';\r\nimport { validationConfig, setEventListener, toggleButtonState } from './components/validate';\r\nimport { addNewCard, getAllUnfo, patchAvatar } from './components/api';\r\n\r\nconst editButton = document.querySelector('.button__edit');\r\nconst popupNewImage = document.querySelector('.popup-image');\r\nconst addButton = document.querySelector('.button__add');\r\nconst formEdit = document.querySelector('.form__edit');\r\nconst formImage = document.querySelector('.form__image');\r\nconst inputNameImg = document.querySelector('.name__img');\r\nconst inputLinkImg = document.querySelector('.link__img');\r\nconst formAvatar = document.querySelector('.form__avatar');\r\nconst popups = document.querySelectorAll('.popup');\r\nconst buttonAddSave = document.querySelector('.button__add-save');\r\nconst buttonAvatarSave = document.querySelector('.button__avatar-save');\r\n\r\n//открытие/закрытие попап аватар\r\nprofileAvatarOverlay.addEventListener('click', function () {\r\n    openPopup(popupAvatar);\r\n    toggleButtonState(buttonAvatarSave, false, validationConfig);\r\n});\r\n\r\n//закрытие попап аватар после редактирования \r\nformAvatar.addEventListener('submit', function(evt){\r\n    evt.preventDefault(); \r\n    changeLoading(true, buttonAvatarSave);\r\n    patchAvatar(avatarInput.value)\r\n        .then((userAvatar)=>{\r\n            setUserInfo({userAvatar: userAvatar.avatar})\r\n            formAvatar.reset();\r\n            closePopup(popupAvatar);\r\n        })\r\n        .catch((err)=> console.log(err))   \r\n        .finally(()=>changeLoading(false, buttonAvatarSave));                  \r\n});\r\n\r\n//открытие и закрытие попап \r\neditButton.addEventListener('click', function () {\r\n    editPopupData(popupProfile);\r\n    openPopup(popupProfile);\r\n});\r\n\r\n//подключение кнопки открытия попап для добавления картинок\r\naddButton.addEventListener('click', function () {\r\n    openPopup(popupNewImage);\r\n    toggleButtonState(buttonAddSave, false, validationConfig);\r\n});\r\n\r\n//редактирование имени и информации о себе\r\nformEdit.addEventListener('submit', submitProfileForm);\r\n\r\nlet userId = null;\r\n\r\ngetAllUnfo()\r\n    .then(([initialCards, user]) => {\r\n        setUserInfo({\r\n            userName: user.name,\r\n            userDescription: user.about,\r\n            userAvatar: user.avatar\r\n        });\r\n        userId = user._id;\r\n        initialCards.forEach(function (item) {\r\n            renderCard(item, cardsContainer, userId);  \r\n        });\r\n    })\r\n    .catch((err)=> console.log(err));\r\n\r\n//подключение формы добавления картинки\r\nformImage.addEventListener('submit', function (evt) {\r\n    evt.preventDefault();   \r\n    changeLoading(true, buttonAddSave)         \r\n    const newCard = {\r\n        link: inputLinkImg.value,\r\n        name: inputNameImg.value\r\n    }\r\naddNewCard(newCard)\r\n.then((data) => {\r\n    renderCard(data, cardsContainer, userId); \r\n    formImage.reset();\r\n    closePopup(popupNewImage);\r\n})\r\n.catch((err)=> console.log(err))\r\n.finally(()=>changeLoading(false, buttonAddSave));            \r\n});\r\n\r\n//объединение закрытие попав крестиком и мышкой\r\npopups.forEach((popup) => {\r\n    popup.addEventListener('mousedown', (evt) => {\r\n        if ((evt.target.classList.contains('popup_opened')) || (evt.target.classList.contains('button__close'))) {\r\n            closePopup(popup)\r\n        }           \r\n    });\r\n});\r\n\r\n//Запускаем валидацию\r\nconst enableValidation = (config) => {\r\n    const forms = document.querySelectorAll(config.formSelector);\r\n    forms.forEach(form => {\r\n        setEventListener(form, config); \r\n    });\r\n}\r\n\r\n//Валидация \r\nenableValidation(validationConfig); \r\n\r\n"],"names":["config","baseUrl","headers","authorization","onResponse","res","ok","json","Promise","reject","status","profileAvatar","document","querySelector","popupAvatar","avatarInput","nameInput","jobInput","profileTitle","profileSubtitle","popupProfile","popupImage","popupPic","popupBigTitle","profileAvatarOverlay","saveButton","closeByEscape","evt","key","closePopup","setUserInfo","userName","userDescription","userAvatar","textContent","src","popup","classList","remove","removeEventListener","openPopup","add","addEventListener","changeLoading","isLoading","place","cardTemplate","content","cardsContainer","updateLikeButton","cardElement","likesArray","userId","cardLike","length","toggle","Boolean","find","likeObj","_id","isLiked","createCard","data","cloneNode","cardImage","cardName","cardDelete","name","link","alt","likes","owner","cardId","isLike","fetch","method","then","changeLikeStatus","dataFromServer","catch","err","console","log","handleChangeLikesStatus","contains","target","closest","handleClickImage","renderCard","container","card","prepend","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","toggleButtonState","button","isActive","disabled","editButton","popupNewImage","addButton","formEdit","formImage","inputNameImg","inputLinkImg","formAvatar","popups","querySelectorAll","buttonAddSave","buttonAvatarSave","avatar","preventDefault","value","body","JSON","stringify","reset","finally","job","about","all","initialCards","user","forEach","item","form","formElement","inputList","submitButton","checkValidity","input","inputElement","isInputValid","validity","valid","errorElement","id","validationMessage","hideError","showError","checkInputValidity","setEventListener","enableValidation"],"sourceRoot":""}